; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]

default_envs=esp8266_example


[env]
framework = arduino

monitor_filters = esp8266_exception_decoder, direct

; lib_extra_dirs =
;     ${PROJECT_DIR}/lib-extra

[esp8266_defaults]
; platform = espressif8266
platform = espressif8266@2.6.3
board = nodemcu
board_build.flash_mode = dio
board_build.filesystem = littlefs
upload_speed = 921600
monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0
upload_protocol = esptool

[enable_debug]
build_flags =
    -D DEBUG_ESP_CORE
    -D DEBUG_ESP_OOM
    -D DEBUG_ESP_WIFI
    ; -D DEBUG_ESP_SSL
    ; -D DEBUG_ESP_TLS_MEM
    ; -D DEBUG_ESP_HTTP_CLIENT
    ; -D DEBUG_ESP_HTTP_SERVER
    -D DEBUG_ESP_WIFI
    ; -D DEBUG_ESP_HTTP_UPDATE
    ; -D DEBUG_ESP_UPDATER
    ; -D DEBUG_ESP_OTA
    ; -D DEBUG_ESP_OOM -include "umm_malloc/umm_malloc_cfg.h"
    -D DEBUG_ESP_PORT=Serial


[env:esp8266_example]
extends = esp8266_defaults
src_filter =
    ${env.src_filter}
    +<../examples/esp8266_example.cpp>

build_flags =
    -ggdb -Og
    ; -Wl,-Map=$PROJECT_BUILD_DIR/firmware.map
    -D NEOPIXEL_OUTPUT_PIN=12
    ; -D NEOPIXEL_NUM_PIXELS=8
    -D NEOPIXEL_DEBUG_TRIGGER_PIN=4
    -D NEOPIXEL_SUPPORT_SET_CPU_FREQ=0
    ${enable_debug.build_flags}