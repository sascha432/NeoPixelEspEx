; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]

; examples
default_envs=esp8266_example
; default_envs=esp8266_example_crash_handler
; default_envs=esp8266_fastled_test

; debugging
; default_envs=esp8266_example_debug

[env]
framework = arduino
; monitor_filters = esp8266_exception_decoder, direct
extra_scripts = scripts/extra_script.py

lib_extra_dirs =
    ${PROJECT_DIR}/lib-extra

lib_deps = https://github.com/sascha432/FastLED.git

[esp8266_defaults]
platform = espressif8266
; platform = espressif8266@^3
; platform = espressif8266@^2
board = nodemcu
; board_build.flash_mode = qio
; board_build.f_cpu = 80000000L
; board_build.f_cpu = 160000000L
upload_speed = 921600
monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0
upload_protocol = esptool

build_flags =
    -ggdb -Og
    -D NEOPIXEL_OUTPUT_PIN=16
    -D NEOPIXEL_INVERT_OUTPUT=0
    ; -D NEOPIXEL_OUTPUT_PIN=12
    -D NEOPIXEL_NUM_PIXELS=20
    -D NEOPIXEL_DEBUG=0
    -D NEOPIXEL_CHIPSET=NEOPIXEL_CHIPSET_WS2812
    -D NEOPIXEL_USE_PRECACHING=0
    -D NEOPIXEL_HAVE_STATS=1
    -D NEOPIXEL_ALLOW_INTERRUPTS=1
    ; -D NEOPIXEL_ALLOW_INTERRUPTS=0
    -D NEOPIXEL_INTERRUPT_RETRY_COUNT=2

; interactive (Serial) demo

[env:esp8266_example]
extends = esp8266_defaults
board_build.f_cpu = 80000000L
; board_build.f_cpu = 160000000L ; GPIO16 is not working with 160Mhz
build_src_filter =
    ${env.build_src_filter}
    +<../examples/esp8266_example.cpp>

; this is for debugging only

[env:esp8266_example_debug]
board_build.f_cpu = 80000000L
; board_build.f_cpu = 160000000L
extends = env:esp8266_example
monitor_filters = esp8266_exception_decoder, direct
build_flags =
    -ggdb -Og
    -I./lib/KFCBaseLibrary/include
    -I./lib/
    -Wno-register
    -Wno-misleading-indentation
    -D NEOPIXEL_OUTPUT_PIN=12
    -D NEOPIXEL_NUM_PIXELS=100
    -D NEOPIXEL_DEBUG=1
    -D NEOPIXEL_DEBUG_TRIGGER_PIN=14
    -D NEOPIXEL_DEBUG_TRIGGER_PIN2=15
    -D NEOPIXEL_CHIPSET=NEOPIXEL_CHIPSET_WS2812
    -D NEOPIXEL_USE_PRECACHING=0
    -D NEOPIXEL_HAVE_STATS=1

; example using the crash_handler to turn off LEDs

[env:esp8266_example_crash_handler]
extends = esp8266_defaults
build_src_filter =
    ${env.build_src_filter}
    +<../examples/esp8266_example_crash_handler.cpp>

[env:esp8266_fastled_test]
platform = espressif8266@^3
; platform = espressif8266@^2
board_build.f_cpu = 80000000L
; board_build.f_cpu = 160000000L
extends = esp8266_defaults
monitor_filters = esp8266_exception_decoder, direct
build_src_filter =
    ${env.build_src_filter}
    +<../examples/esp8266_fastled_example.cpp>
lib_extra_dirs =
lib_deps = https://github.com/FastLED/FastLED.git
; lib_deps = https://github.com/sascha432/FastLED.git
; lib_deps = https://github.com/sascha432/FastLED.git#FastLED_master
build_flags =
    -ggdb -Og
    ; -I./lib/KFCBaseLibrary/include
    ; -I./lib/
    -Wno-register
    -Wno-misleading-indentation
    -Wno-deprecated-declarations
    -D NEOPIXEL_OUTPUT_PIN=12
    -D NEOPIXEL_NUM_PIXELS=32
    -D NEOPIXEL_DEBUG=0
    -D NEOPIXEL_DEBUG_TRIGGER_PIN=14
    -D NEOPIXEL_DEBUG_TRIGGER_PIN2=15
    -D NEOPIXEL_CHIPSET=NEOPIXEL_CHIPSET_WS2812
    -D NEOPIXEL_USE_PRECACHING=0
    -D NEOPIXEL_ALLOW_INTERRUPTS=1
    -D NEOPIXEL_HAVE_STATS=1
